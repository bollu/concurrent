#include <Cmm.h>

pinThreadzh() {
  W_ locked, flags;
  flags  = TO_W_(StgTSO_flags(CurrentTSO));

  if (flags & TSO_LOCKED != 0) {
    locked = 1;
  } else {
    locked = 0;
    StgTSO_flags(CurrentTSO) = %lobits32(flags | TSO_LOCKED);
  }

  return (locked);
}

unpinThreadzh() {
  StgTSO_flags(CurrentTSO) = %lobits32(TO_W_(StgTSO_flags(CurrentTSO)) & (~TSO_LOCKED));
  return ();
}

currentCapabilityzh() {
  W_ i;
  i = TO_W_(Capability_no(StgTSO_cap(CurrentTSO)));
  return (i);
}

currentThreadzh() {
  W_ i;
  i = TO_W_(StgTSO_id(CurrentTSO));
  return (i);
}
